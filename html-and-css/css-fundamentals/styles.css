/*
1. font: -size, -family, -style, -weight
2. text: -align, -transform, -decoration
3. line: -height
4. list: -style
5. color
6. background: -color
7. border: width style color
8. cursor
9. padding: top bottom left right
10. padding: top&bottom left&right
11. margin
12. display
13. position
14. top, bottom, left, right
15. content
16. letter spacing
*/

* {
  /* global reset*/
  margin: 0;
  padding: 0;
}

.container {
  /*centering page*/
  width: 1000px;
  margin: 0 auto;
  position: relative;
}

body {
  font-family: sans-serif;
  color: #444;
  border-top: 10px solid #1098ad;
}

.main-header {
  background-color: #f7f7f7;
  padding: 20px;
  margin-bottom: 60px;
}

h2 {
  position: relative;
}

h2::after {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  position: absolute;
  font-size: 15px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  top: -10px;
  right: -25px;
}

nav {
  font-size: 18px;
  text-align: center;
}

nav a:link {
  display: inline-block;
  margin-right: 30px;
  margin-top: 10px;
}

nav a:link:last-child {
  margin-right: 0;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 0;
  width: 500px;
}

h1,
h4 {
  text-transform: uppercase;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px; /*Being h1 doesn;t mean it has to have the biggest font*/
  font-style: italic;
}

h2 {
  font-size: 50px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0; /*No need to specify units just 0*/
}

/*descendant selector: selects all p elements inside the footer*/
/* footer p {
  font-size: 16px;
} */

#copyright {
  font-size: 16px;
}

#author {
  font-size: 18px;
  font-style: italic;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* In the real world id's aren't used. Using classes future proofs the code, in case we want to reuse the style. 
Even if we use it only one, try using classes.*/
.related {
  list-style: none;
}

/* 
    color - (R, G, B) values ranges  [0-255] OR [0 - ff]
    1. rgb(R, G, B)
    2. rgba(R, G, B, A)
    3. #rrggbb
    4. When colors in all 3 channels are the same we get a grey color
*/

/* li:first-child, li:last-child, li:nth-child(number/odd/even) pseudo-classes*/
/* selects all li elements that are the first childs of it's parent elements  */
ol li:first-child {
  font-weight: bold;
}

/* 
    article p - selects all p elements inside the article element
    article p:first-child - selects p element that is the FIRST CHILD of the article element.
                            NOT THE FIRST P ELEMENT INSIDE THE ARTICLE.

*/

/* a:link, a:visited, a:hover, a:active DEFINED IN THIS ORDER */
a:link,
a:visited {
  color: #1098ad;
  text-decoration: none;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

/* Conflicting Declarations

  0. Declarations marked with !important
  1. In-line styles
  2. ID selector
  3. Class or Pseudo-class Selector
  4. Element Selector
  5. Universal Selector (*) -> applies styles to every single element NO Inheritance Involved

  If one selector is more complex than the other, the complex one gets applies in most cases

  If there are multiple of each, then last selector in code applies.

  It is a bit more complicated under the hood. (CSS Specificity)
*/

/* Inheritance and The Universal Selector

  -> Is a mechanism by which some properties are passed down/ applied to child elements from parent elements
  -> Not all properties get inherited, it mostly properties related to text.
  -> An inherited rule is easily overritten by any rule which has a value for that same property
*/

/* Box Model
  -> describes how elements are displayed and sized

  1. Content
  2. Padding
  3. Border
  4. Margin
  5. Fill Area

  Default Behaviour : 
    -> Final Element Width = left border + left padding + width + right padding + right border (likewise for Height)
*/

/* 
  Try using either margin-bottom or margin-top to create vertical space. Beware of COLLAPSING MARGINS.
  When two margins occupy the same space, only one of them will be visible.
*/

.post-image {
  /* width: 800px;
  height: auto; if height attribute is set in html otherwise the other adapts to maintain aspect ratio.*/
  width: 100%; /*100% of the parent element*/
}

/* Types of Boxes
  
  -> Block Level Elements occupy 100% of the parent element's width and create line breaks after them i.e. stacked vertically by default. Box model behaves normally.

  -> In-line elements occupy only the space necessary for its content; no line-breaks. Box model applies in a differrent way. Heights and Widths do not apply. Padding and margins are applied only horizintally.

  -> In-line block, looks like inline from the outside, behaves like block-level on the inside. Occupies only the content's space. No line-breaks. Box-model applies normally.

  -> Images are inline-block
*/

/* Positioning

  -> Normal Flow "in flow". Elements are simply laid out according to their order in the HTML code. (relative)
  -> Absolute Positioning. "out of flow". No impact on surrounding elements, might overlap them. We use top, bottom, left ot right to offset the element from its FIRST RELATIVELY positioned PARENT container. BY DEFAULT IT IS RELATIVE TO THE VIEWPORT.

*/

.like {
  position: absolute;
  bottom: 50px;
  right: 50px;
  padding: 20px;
  font-size: 18px;
  cursor: pointer;
}

/* Pseudo-elements
  -> don't exist in html can be selected in css and styled
*/

.title::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* p::first-line {
  First line of every paragraph
} */

header + p::first-letter {
  /*Adjacent sibiling selector*/
  font-family: serif;
  font-size: 50px;
  font-weight: bold;
}
